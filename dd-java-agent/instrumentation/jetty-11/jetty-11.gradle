ext {
  minJavaVersionForTests = JavaVersion.VERSION_11
}

muzzle {
  pass {
    group = "org.eclipse.jetty"
    module = 'jetty-server'
    versions = "[11,12)"
  }
}

apply from: "$rootDir/gradle/java.gradle"
apply plugin: 'java-test-fixtures'

// TODO latestDepTest only works on Java8 for now
//apply plugin: 'org.unbroken-dome.test-sets'
//
//testSets {
//  latestDepTest {
//    dirName = 'test'
//  }
//}

sourceSets {
  "main_java11" {
    java.srcDirs "${project.projectDir}/src/main/java11"
  }
}

tasks.withType(Test).configureEach {
  if (name != 'forkedTest') {
    scanForTestClasses = false // scanForTestClasses can't find parent of Jetty70Test
    include "**/*Test.class"
  }
}

[compileMain_java11Java, compileTestJava].each {
  it.configure {
    if (!System.env.JAVA_11_HOME) {
      throw new GradleException('JAVA_11_HOME must be set to build Java 11 code')
    }
    javaCompiler = javaToolchains.compilerFor {
      languageVersion = JavaLanguageVersion.of(11)
      sourceCompatibility = JavaVersion.VERSION_1_8
      targetCompatibility = JavaVersion.VERSION_1_8
    }
  }
}

[compileTestGroovy, compileTestFixturesGroovy].each {
  it.configure {
    if (!System.env.JAVA_11_HOME) {
      throw new GradleException('JAVA_11_HOME must be set to build Java 11 code')
    }
    javaLauncher = javaToolchains.launcherFor {
      languageVersion = JavaLanguageVersion.of(11)
      sourceCompatibility = JavaVersion.VERSION_1_8
      targetCompatibility = JavaVersion.VERSION_1_8
    }
  }
}

dependencies {
  main_java11CompileOnly ("org.eclipse.jetty:jetty-server:11.0.0") {
    exclude group: 'org.slf4j', module: 'slf4j-api'
  }

  // Don't want to conflict with jetty from the test server.
  // Avoid testFixturesApi because exclusion doesn't seem to then apply to test runtime cp
  testImplementation(project(':dd-java-agent:testing')) {
    exclude group: 'org.eclipse.jetty', module: 'jetty-server'
  }
  testFixturesCompileOnly(project(':dd-java-agent:testing')) {
    exclude group: 'org.eclipse.jetty', module: 'jetty-server'
  }

  testFixturesApi("org.eclipse.jetty:jetty-server:11.0.0") {
    exclude group: 'org.slf4j', module: 'slf4j-api'
  }

  //latestDepTestImplementation group: 'org.eclipse.jetty', name: 'jetty-server', version: '11.+'
}

